// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id
  username  String   @unique
  avatar    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  dailies   Daily[]
  weeklies  Weekly[]
  goals     Goal[]

  @@map("users")
}

model Daily {
  id          String   @id @default(uuid())
  title       String
  description String
  resetDay    DateTime
  userId      String
  isCompleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])

  @@map("dailies")
}

model Weekly {
  id          String   @id @default(uuid())
  title       String
  description String
  resetDay    DateTime
  userId      String
  isCompleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])

  @@map("weeklies")
}

model Goal {
  id     String @id @default(uuid())
  itemId String
  userId String
  item   Item   @relation(fields: [itemId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@map("goals")
}

enum ItemTypes {
  accessory
  weapon
  armor
}

model Item {
  id    String    @id @default(uuid())
  name  String    @unique
  image Bytes
  price Int       @default(1000000000)
  tier  Int
  type  ItemTypes
  Goal  Goal[]

  @@map("items")
}

model Spot {
  id           String         @id @default(uuid())
  name         String         @unique
  image        Bytes
  drops        Drop[]
  DropsOnSpots DropsOnSpots[]

  @@map("spots")
}

model Drop {
  id           String         @id @default(uuid())
  name         String         @unique
  price        Int
  image        Bytes
  tax          Boolean
  spots        Spot[]
  DropsOnSpots DropsOnSpots[]

  @@map("drops")
}

model DropsOnSpots {
  spot   Spot   @relation(fields: [spotId], references: [id])
  spotId String
  drop   Drop   @relation(fields: [dropId], references: [id])
  dropId String

  @@id([spotId, dropId])
}
